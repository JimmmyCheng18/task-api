version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-api-backend
    ports:
      - "${BACKEND_HOST_PORT:-3333}:${BACKEND_CONTAINER_PORT:-8080}"
    env_file:
      - .env
    environment:
      - PORT=${PORT:-8080}
      - HOST=${HOST:-0.0.0.0}
      - GIN_MODE=${GIN_MODE:-release}
      - ALLOWED_ORIGINS=http://localhost:${FRONTEND_HOST_PORT:-3666},http://127.0.0.1:${FRONTEND_HOST_PORT:-3666},http://192.168.0.164:${FRONTEND_HOST_PORT:-3666},http://localhost:${BACKEND_HOST_PORT:-3333},http://127.0.0.1:${BACKEND_HOST_PORT:-3333},http://192.168.0.164:${BACKEND_HOST_PORT:-3333}
      - SHUTDOWN_TIMEOUT=${SHUTDOWN_TIMEOUT:-30}
      - READ_TIMEOUT=${READ_TIMEOUT:-60}
      - WRITE_TIMEOUT=${WRITE_TIMEOUT:-60}
      - IDLE_TIMEOUT=${IDLE_TIMEOUT:-120}
      - MAX_TASKS=${MAX_TASKS:-10000}
      - RATE_LIMIT_ENABLED=${RATE_LIMIT_ENABLED:-true}
      - RATE_LIMIT_PER_IP=${RATE_LIMIT_PER_IP:-100}
      - RATE_LIMIT_PER_API_KEY=${RATE_LIMIT_PER_API_KEY:-1000}
      - RATE_LIMIT_CLEANUP_TIME=${RATE_LIMIT_CLEANUP_TIME:-5}
    networks:
      - task-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${BACKEND_CONTAINER_PORT:-8080}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: task-frontend
    ports:
      - "${FRONTEND_HOST_PORT:-3666}:${FRONTEND_CONTAINER_PORT:-80}"
    env_file:
      - .env
    environment:
      - NGINX_PORT=${FRONTEND_CONTAINER_PORT:-80}
    networks:
      - task-network
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:${FRONTEND_CONTAINER_PORT:-80}/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  task-network:
    driver: bridge
    name: task-management-network

volumes:
  # Optional: Add volumes if needed for data persistence
  app-data:
    name: task-management-data